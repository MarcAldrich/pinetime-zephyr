bluetooth.rst:2: (bluetooth)  bluetooth (BLE) example
bluetooth.rst:4: (nrf)  The PineTime uses a Nordic nrf52832 chip, which has BLE functionality build into it.
bluetooth.rst:8: (bluetooth)  The watch will behave as a bluetooth beacon, and you should be able to detect it with your smartphone or with bluez under linux.
bluetooth.rst:8: (bluez)  The watch will behave as a bluetooth beacon, and you should be able to detect it with your smartphone or with bluez under linux.
bluetooth.rst:8: (linux)  The watch will behave as a bluetooth beacon, and you should be able to detect it with your smartphone or with bluez under linux.
bluetooth.rst:12: (pinetime)  Using a standard zephyr application under pinetime:
bluetooth.rst:18: (pinetime)  In order to use a standard, you can just copy it under the pinetime directory.
bluetooth.rst:24: (bluetooth)  Have a look in the samples/bluetooth/eddystone directory.
bluetooth.rst:24: (eddystone)  Have a look in the samples/bluetooth/eddystone directory.
bluetooth.rst:43: (bluetooth)  Using the created bluetooth sample:
bluetooth.rst:46: (linux)  I use linux with a bluetoothadapter 4.0.
bluetooth.rst:46: (bluetoothadapter)  I use linux with a bluetoothadapter 4.0.
bluetooth.rst:46: (bluez)  You need to install bluez.
bluetooth.rst:57: (nrf)  If you have a smartphone, you can download the nrf utilities app from nordic.
bluetooth.rst:57: (nordic)  If you have a smartphone, you can download the nrf utilities app from nordic.
bluetooth.rst:61: (Ble)  Ble Peripheral
bluetooth.rst:63: (bluetooth)  this example is a demo of the services under bluetooth
bluetooth.rst:75: (linux)  With linux you can have a look using bluetoothctl:
bluetooth.rst:75: (bluetoothctl)  With linux you can have a look using bluetoothctl:
bluetooth.rst:92: (nordic)  same thing with the app from nordic, you could try to connect and display value of e.g. heart rate
bluetooth.rst:96: (bluetoothservices)  using Python to read out bluetoothservices
bluetooth.rst:98: (repo)  In this repo you will find a python script : readbat.py
bluetooth.rst:98: (readbat)  In this repo you will find a python script : readbat.py
bluetooth.rst:98: (py)  In this repo you will find a python script : readbat.py
bluetooth.rst:98: (bluez)  In order to use it you need bluez on linux and the python 
bluetooth.rst:98: (linux)  In order to use it you need bluez on linux and the python 
bluetooth.rst:101: (bluetooth)  It can be used in conjunction with the peripheral bluetooth demo.
